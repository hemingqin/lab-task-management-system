{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\Lab_team_task_management\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Configure axios defaults\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Handle 401 responses\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Checking auth with token:', token);\n      if (!token) {\n        console.log('No token found');\n        setIsAuthenticated(false);\n        setUser(null);\n        return;\n      }\n      const response = await api.get('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Auth check response:', response.data);\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Auth check failed:', error.response || error);\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/auth/login', {\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      const {\n        access_token,\n        user\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login failed:', error.response || error);\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed';\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/auth/register', {\n        username,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      const {\n        access_token,\n        user\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Registration failed:', error.response || error);\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Registration failed';\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuth","console","log","get","data","login","email","password","post","access_token","setItem","_error$response2","_error$response2$data","register","username","_error$response3","_error$response3$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/git/Lab_team_task_management/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Configure axios defaults\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to all requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Handle 401 responses\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Checking auth with token:', token);\n      \n      if (!token) {\n        console.log('No token found');\n        setIsAuthenticated(false);\n        setUser(null);\n        return;\n      }\n\n      const response = await api.get('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Auth check response:', response.data);\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Auth check failed:', error.response || error);\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/auth/login', \n        { email, password },\n        { \n          headers: { 'Content-Type': 'application/json' },\n          withCredentials: true\n        }\n      );\n      \n      const { access_token, user } = response.data;\n      localStorage.setItem('token', access_token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Login failed:', error.response || error);\n      throw error.response?.data?.error || 'Login failed';\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/auth/register',\n        { username, email, password },\n        { \n          headers: { 'Content-Type': 'application/json' },\n          withCredentials: true\n        }\n      );\n      \n      const { access_token, user } = response.data;\n      localStorage.setItem('token', access_token);\n      setUser(user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Registration failed:', error.response || error);\n      throw error.response?.data?.error || 'Registration failed';\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}